package sample.ShoppingSystem;

/*
 * class ProductOrdered defines an order of a specific product by a user
 *
 * The order number is generated by the system when a ProductOrdered object is created.
 *
 * Also stores any product options chosen by this user (e.g. paperback book, certain size of a product etc)
 */
public class ProductOrdered {

    private String orderNumber;
    private Product product;
    private User user;

    public ProductOrdered(String orderNumber, Product product, User user) {

        this.orderNumber = orderNumber;
        this.product = product;
        this.user = user;
    }

    public String getOrderNumber() {

        return orderNumber;
    }

    public void setOrderNumber(String orderNumber) {

        this.orderNumber = orderNumber;
    }

    public Product getProduct() {

        return product;
    }

    public void setProduct(Product product) {

        this.product = product;
    }

    public void setCustomer(User user) {

        this.user = user;
    }

    public User getUser() {

        return user;
    }

    public void setUser(User user) {

        this.user = user;
    }

    public String getData(){

        return orderNumber + "\n" + user.getId() + "\n" + product.getSellerID() + "\n" + product.getId() + "\n";
    }

    public String returnStrProductOrdered() {

        return String.format("\nOrder # %3s User Id: %3s Product Id: %3s Product Name: %-30s", orderNumber, user.getId(), product.getId(), product.getName());
    }

    /*
     * Two ProductOrdered objects are equal if they have the same order number string.
     */
    public boolean equals(Object other) {
        // Compare two ProductOrdered objects based on their orderNumber strings
        // Replace the line below (Hint: look at class Product equals())

        ProductOrdered otherP = (ProductOrdered) other;
        return this.getOrderNumber().equals(otherP.getOrderNumber());


    }
}
